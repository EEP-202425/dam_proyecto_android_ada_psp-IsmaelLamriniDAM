package dam.psp.proyectoFinal.controller;

import java.net.URI;
import java.util.List;
import java.util.Optional;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.util.UriComponentsBuilder;

import dam.psp.proyectoFinal.CamionRepository;
import dam.psp.proyectoFinal.tablas.Camion;

@RestController
@RequestMapping("/camiones")
public class CamionController {
	
	private CamionRepository camionRepository;
	
	// GUARDA EL NUEVO OBJETO CAMIÃ“N EN LA BBDD Y CREA SU URL.
	@PostMapping
	private ResponseEntity<Void> createCamion(@RequestBody Camion newCamion, UriComponentsBuilder ucb) {
		Camion camionGuardado = camionRepository.save(newCamion);
		URI nuevaURL = ucb.path("camiones/{id}").buildAndExpand(camionGuardado.getId()).toUri();
		return ResponseEntity.created(nuevaURL).build();
	}
	
	@GetMapping
	private ResponseEntity<List<Camion>> getAll() {
		List<Camion> camiones = camionRepository.findAll();
		return ResponseEntity.ok(camiones);
	}
	
	// DEVUELVO EL OBJETO COMPLETO DEL ID RECIBIDO.
	@GetMapping("/{id}") 
	private ResponseEntity<Camion> findById(@PathVariable int id) {
		Optional<Camion> miCamion = camionRepository.findById(id);
		if (miCamion.isPresent()) {
			return ResponseEntity.ok(miCamion.get());
		} else {
			return ResponseEntity.notFound().build();
		}
	}
	
	
	
}
